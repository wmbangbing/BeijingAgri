{"remainingRequest":"E:\\Code\\VsCode\\测试代码\\bjAgri\\node_modules\\babel-loader\\lib\\index.js!E:\\Code\\VsCode\\测试代码\\bjAgri\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Code\\VsCode\\测试代码\\bjAgri\\src\\permission.js","dependencies":[{"path":"E:\\Code\\VsCode\\测试代码\\bjAgri\\src\\permission.js","mtime":1538651885534},{"path":"E:\\Code\\VsCode\\测试代码\\bjAgri\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537168178297},{"path":"E:\\Code\\VsCode\\测试代码\\bjAgri\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Code\\VsCode\\测试代码\\bjAgri\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import router from './router';\nimport store from './store';\nimport { Message } from 'element-ui';\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css'; // progress bar style\n\nimport { getToken } from '@/utils/auth'; // getToken from cookie\n\nNProgress.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\nvar whiteList = ['/login']; // 不重定向白名单\n\nrouter.beforeEach(function (to, from, next) {\n  NProgress.start();\n\n  if (getToken()) {\n    if (to.path === '/login') {\n      next({\n        path: '/'\n      });\n      NProgress.done(); // if current page is dashboard will not trigger\tafterEach hook, so manually handle it\n    } else {\n      if (store.getters.roles.length === 0) {\n        store.dispatch('GetUserInfo').then(function (res) {\n          // 拉取用户信息\n          next();\n        }).catch(function (err) {\n          store.dispatch('FedLogOut').then(function () {\n            Message.error(err || 'Verification failed, please login again');\n            next({\n              path: '/'\n            });\n          });\n        });\n      } else {\n        next();\n      }\n    }\n  } else {\n    if (whiteList.indexOf(to.path) !== -1) {\n      next();\n    } else {\n      next(\"/login?redirect=\".concat(to.path)); // 否则全部重定向到登录页\n\n      NProgress.done();\n    }\n  }\n});\nrouter.afterEach(function () {\n  NProgress.done(); // 结束Progress\n});",{"version":3,"sources":["E:\\Code\\VsCode\\测试代码\\bjAgri\\src\\permission.js"],"names":["router","store","Message","NProgress","getToken","configure","showSpinner","whiteList","beforeEach","to","from","next","start","path","done","getters","roles","length","dispatch","then","catch","err","error","indexOf","afterEach"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAkC;;AAClC,OAAO,yBAAP,C,CAAgC;;AAChC,SAASC,QAAT,QAAyB,cAAzB,C,CAAwC;;AAExCD,UAAUE,SAAV,CAAoB;AAAEC,eAAa;AAAf,CAApB,E,CAA2C;;AAG3C,IAAMC,YAAY,CAAC,QAAD,CAAlB,C,CAA6B;;AAC7BP,OAAOQ,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpCR,YAAUS,KAAV;;AACA,MAAIR,UAAJ,EAAgB;AACd,QAAIK,GAAGI,IAAH,KAAY,QAAhB,EAA0B;AACxBF,WAAK;AAAEE,cAAM;AAAR,OAAL;AACAV,gBAAUW,IAAV,GAFwB,CAEP;AAClB,KAHD,MAGO;AACL,UAAIb,MAAMc,OAAN,CAAcC,KAAd,CAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AACpChB,cAAMiB,QAAN,CAAe,aAAf,EAA8BC,IAA9B,CAAmC,eAAO;AAAE;AAC1CR;AACD,SAFD,EAEGS,KAFH,CAES,UAACC,GAAD,EAAS;AAChBpB,gBAAMiB,QAAN,CAAe,WAAf,EAA4BC,IAA5B,CAAiC,YAAM;AACrCjB,oBAAQoB,KAAR,CAAcD,OAAO,yCAArB;AACAV,iBAAK;AAAEE,oBAAM;AAAR,aAAL;AACD,WAHD;AAID,SAPD;AAQD,OATD,MASO;AACLF;AACD;AACF;AACF,GAlBD,MAkBO;AACL,QAAIJ,UAAUgB,OAAV,CAAkBd,GAAGI,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACrCF;AACD,KAFD,MAEO;AACLA,qCAAwBF,GAAGI,IAA3B,GADK,CAC8B;;AACnCV,gBAAUW,IAAV;AACD;AACF;AACF,CA5BD;AA8BAd,OAAOwB,SAAP,CAAiB,YAAM;AACrBrB,YAAUW,IAAV,GADqB,CACJ;AAClB,CAFD","sourcesContent":["import router from './router'\r\nimport store from './store'\r\nimport { Message } from 'element-ui'\r\nimport NProgress from 'nprogress' // progress bar\r\nimport 'nprogress/nprogress.css'// progress bar style\r\nimport { getToken } from '@/utils/auth' // getToken from cookie\r\n\r\nNProgress.configure({ showSpinner: false })// NProgress Configuration\r\n\r\n\r\nconst whiteList = ['/login'] // 不重定向白名单\r\nrouter.beforeEach((to, from, next) => {\r\n  NProgress.start()\r\n  if (getToken()) {\r\n    if (to.path === '/login') {\r\n      next({ path: '/' })\r\n      NProgress.done() // if current page is dashboard will not trigger\tafterEach hook, so manually handle it\r\n    } else {\r\n      if (store.getters.roles.length === 0) {\r\n        store.dispatch('GetUserInfo').then(res => { // 拉取用户信息\r\n          next()\r\n        }).catch((err) => {\r\n          store.dispatch('FedLogOut').then(() => {\r\n            Message.error(err || 'Verification failed, please login again')\r\n            next({ path: '/' })\r\n          })\r\n        })\r\n      } else {\r\n        next()\r\n      }\r\n    }\r\n  } else {\r\n    if (whiteList.indexOf(to.path) !== -1) {\r\n      next()\r\n    } else {\r\n      next(`/login?redirect=${to.path}`) // 否则全部重定向到登录页\r\n      NProgress.done()\r\n    }\r\n  }\r\n})\r\n\r\nrouter.afterEach(() => {\r\n  NProgress.done() // 结束Progress\r\n})\r\n"]}]}