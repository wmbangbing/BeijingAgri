{"remainingRequest":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\babel-loader\\lib\\index.js!E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Code\\VsCode\\测试代码\\login-demo\\src\\permission.js","dependencies":[{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\src\\permission.js","mtime":1537442694238},{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537168178297},{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"E:\\\\Code\\\\VsCode\\\\\\u6D4B\\u8BD5\\u4EE3\\u7801\\\\login-demo\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport router from './router';\nimport store from './store';\nimport { Message } from 'element-ui';\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css'; // progress bar style\n\nimport { getToken } from '@/utils/auth'; // getToken from cookie\n\nNProgress.configure({\n  showSpinner: false\n}); // NProgress Configuration\n// permission judge function\n\nfunction hasPermission(roles, permissionRoles) {\n  if (roles.indexOf('admin') >= 0) return true; // admin permission passed directly\n\n  if (!permissionRoles) return true;\n  return roles.some(function (role) {\n    return permissionRoles.indexOf(role) >= 0;\n  });\n}\n\nvar whiteList = ['/login', '/auth-redirect']; // no redirect whitelist\n\nrouter.beforeEach(function (to, from, next) {\n  NProgress.start(); // start progress bar\n\n  if (getToken()) {\n    // determine if there has token\n\n    /* has token*/\n    if (to.path === '/login') {\n      next({\n        path: '/'\n      });\n      NProgress.done(); // if current page is dashboard will not trigger\tafterEach hook, so manually handle it\n    } else {\n      if (store.getters.roles.length === 0) {\n        // 判断当前用户是否已拉取完user_info信息\n        store.dispatch('GetUserInfo').then(function (res) {\n          // 拉取user_info\n          var roles = res.data.roles; // note: roles must be a array! such as: ['editor','develop']\n\n          store.dispatch('GenerateRoutes', {\n            roles: roles\n          }).then(function () {\n            // 根据roles权限生成可访问的路由表\n            router.addRoutes(store.getters.addRouters); // 动态添加可访问路由表\n\n            next(_objectSpread({}, to, {\n              replace: true\n            })); // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\n          });\n        }).catch(function (err) {\n          store.dispatch('FedLogOut').then(function () {\n            Message.error(err || 'Verification failed, please login again');\n            next({\n              path: '/'\n            });\n          });\n        });\n      } else {\n        // 没有动态改变权限的需求可直接next() 删除下方权限判断 ↓\n        if (hasPermission(store.getters.roles, to.meta.roles)) {\n          next();\n        } else {\n          next({\n            path: '/401',\n            replace: true,\n            query: {\n              noGoBack: true\n            }\n          });\n        } // 可删 ↑\n\n      }\n    }\n  } else {\n    /* has no token*/\n    if (whiteList.indexOf(to.path) !== -1) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      next('/login'); // 否则全部重定向到登录页\n\n      NProgress.done(); // if current page is login will not trigger afterEach hook, so manually handle it\n    }\n  }\n});\nrouter.afterEach(function () {\n  NProgress.done(); // finish progress bar\n});",{"version":3,"sources":["E:\\Code\\VsCode\\测试代码\\login-demo\\src\\permission.js"],"names":["router","store","Message","NProgress","getToken","configure","showSpinner","hasPermission","roles","permissionRoles","indexOf","some","role","whiteList","beforeEach","to","from","next","start","path","done","getters","length","dispatch","then","res","data","addRoutes","addRouters","replace","catch","err","error","meta","query","noGoBack","afterEach"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAkC;;AAClC,OAAO,yBAAP,C,CAAgC;;AAChC,SAASC,QAAT,QAAyB,cAAzB,C,CAAwC;;AAExCD,UAAUE,SAAV,CAAoB;AAAEC,eAAa;AAAf,CAApB,E,CAA2C;AAE3C;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,eAA9B,EAA+C;AAC7C,MAAID,MAAME,OAAN,CAAc,OAAd,KAA0B,CAA9B,EAAiC,OAAO,IAAP,CADY,CACA;;AAC7C,MAAI,CAACD,eAAL,EAAsB,OAAO,IAAP;AACtB,SAAOD,MAAMG,IAAN,CAAW;AAAA,WAAQF,gBAAgBC,OAAhB,CAAwBE,IAAxB,KAAiC,CAAzC;AAAA,GAAX,CAAP;AACD;;AAED,IAAMC,YAAY,CAAC,QAAD,EAAW,gBAAX,CAAlB,C,CAA8C;;AAE9Cb,OAAOc,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpCd,YAAUe,KAAV,GADoC,CAClB;;AAClB,MAAId,UAAJ,EAAgB;AAAE;;AAChB;AACA,QAAIW,GAAGI,IAAH,KAAY,QAAhB,EAA0B;AACxBF,WAAK;AAAEE,cAAM;AAAR,OAAL;AACAhB,gBAAUiB,IAAV,GAFwB,CAEP;AAClB,KAHD,MAGO;AACL,UAAInB,MAAMoB,OAAN,CAAcb,KAAd,CAAoBc,MAApB,KAA+B,CAAnC,EAAsC;AAAE;AACtCrB,cAAMsB,QAAN,CAAe,aAAf,EAA8BC,IAA9B,CAAmC,eAAO;AAAE;AAC1C,cAAMhB,QAAQiB,IAAIC,IAAJ,CAASlB,KAAvB,CADwC,CACX;;AAC7BP,gBAAMsB,QAAN,CAAe,gBAAf,EAAiC;AAAEf;AAAF,WAAjC,EAA4CgB,IAA5C,CAAiD,YAAM;AAAE;AACvDxB,mBAAO2B,SAAP,CAAiB1B,MAAMoB,OAAN,CAAcO,UAA/B,EADqD,CACV;;AAC3CX,mCAAUF,EAAV;AAAcc,uBAAS;AAAvB,gBAFqD,CAEtB;AAChC,WAHD;AAID,SAND,EAMGC,KANH,CAMS,UAACC,GAAD,EAAS;AAChB9B,gBAAMsB,QAAN,CAAe,WAAf,EAA4BC,IAA5B,CAAiC,YAAM;AACrCtB,oBAAQ8B,KAAR,CAAcD,OAAO,yCAArB;AACAd,iBAAK;AAAEE,oBAAM;AAAR,aAAL;AACD,WAHD;AAID,SAXD;AAYD,OAbD,MAaO;AACL;AACA,YAAIZ,cAAcN,MAAMoB,OAAN,CAAcb,KAA5B,EAAmCO,GAAGkB,IAAH,CAAQzB,KAA3C,CAAJ,EAAuD;AACrDS;AACD,SAFD,MAEO;AACLA,eAAK;AAAEE,kBAAM,MAAR;AAAgBU,qBAAS,IAAzB;AAA+BK,mBAAO;AAAEC,wBAAU;AAAZ;AAAtC,WAAL;AACD,SANI,CAOL;;AACD;AACF;AACF,GA7BD,MA6BO;AACL;AACA,QAAItB,UAAUH,OAAV,CAAkBK,GAAGI,IAArB,MAA+B,CAAC,CAApC,EAAuC;AAAE;AACvCF;AACD,KAFD,MAEO;AACLA,WAAK,QAAL,EADK,CACU;;AACfd,gBAAUiB,IAAV,GAFK,CAEY;AAClB;AACF;AACF,CAxCD;AA0CApB,OAAOoC,SAAP,CAAiB,YAAM;AACnBjC,YAAUiB,IAAV,GADmB,CACF;AACpB,CAFD","sourcesContent":["import router from './router'\r\nimport store from './store'\r\nimport { Message } from 'element-ui'\r\nimport NProgress from 'nprogress' // progress bar\r\nimport 'nprogress/nprogress.css'// progress bar style\r\nimport { getToken } from '@/utils/auth' // getToken from cookie\r\n\r\nNProgress.configure({ showSpinner: false })// NProgress Configuration\r\n\r\n// permission judge function\r\nfunction hasPermission(roles, permissionRoles) {\r\n  if (roles.indexOf('admin') >= 0) return true // admin permission passed directly\r\n  if (!permissionRoles) return true\r\n  return roles.some(role => permissionRoles.indexOf(role) >= 0)\r\n}\r\n\r\nconst whiteList = ['/login', '/auth-redirect']// no redirect whitelist\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  NProgress.start() // start progress bar\r\n  if (getToken()) { // determine if there has token\r\n    /* has token*/\r\n    if (to.path === '/login') {\r\n      next({ path: '/' })\r\n      NProgress.done() // if current page is dashboard will not trigger\tafterEach hook, so manually handle it\r\n    } else {\r\n      if (store.getters.roles.length === 0) { // 判断当前用户是否已拉取完user_info信息\r\n        store.dispatch('GetUserInfo').then(res => { // 拉取user_info\r\n          const roles = res.data.roles // note: roles must be a array! such as: ['editor','develop']\r\n          store.dispatch('GenerateRoutes', { roles }).then(() => { // 根据roles权限生成可访问的路由表\r\n            router.addRoutes(store.getters.addRouters) // 动态添加可访问路由表\r\n            next({ ...to, replace: true }) // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\r\n          })\r\n        }).catch((err) => {\r\n          store.dispatch('FedLogOut').then(() => {\r\n            Message.error(err || 'Verification failed, please login again')\r\n            next({ path: '/' })\r\n          })\r\n        })\r\n      } else {\r\n        // 没有动态改变权限的需求可直接next() 删除下方权限判断 ↓\r\n        if (hasPermission(store.getters.roles, to.meta.roles)) {\r\n          next()\r\n        } else {\r\n          next({ path: '/401', replace: true, query: { noGoBack: true }})\r\n        }\r\n        // 可删 ↑\r\n      }\r\n    }\r\n  } else {\r\n    /* has no token*/\r\n    if (whiteList.indexOf(to.path) !== -1) { // 在免登录白名单，直接进入\r\n      next()\r\n    } else {\r\n      next('/login') // 否则全部重定向到登录页\r\n      NProgress.done() // if current page is login will not trigger afterEach hook, so manually handle it\r\n    }\r\n  }\r\n})\r\n\r\nrouter.afterEach(() => {\r\n    NProgress.done() // finish progress bar\r\n})\r\n"]}]}