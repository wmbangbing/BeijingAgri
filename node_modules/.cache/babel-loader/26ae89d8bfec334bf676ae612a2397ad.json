{"remainingRequest":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\babel-loader\\lib\\index.js!E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Code\\VsCode\\测试代码\\login-demo\\src\\store\\modules\\tagsView.js","dependencies":[{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\src\\store\\modules\\tagsView.js","mtime":1536028147655},{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537168178297},{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"E:\\\\Code\\\\VsCode\\\\\\u6D4B\\u8BD5\\u4EE3\\u7801\\\\login-demo\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/toConsumableArray\";\nimport _slicedToArray from \"E:\\\\Code\\\\VsCode\\\\\\u6D4B\\u8BD5\\u4EE3\\u7801\\\\login-demo\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/slicedToArray\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.object.assign\";\nvar tagsView = {\n  state: {\n    visitedViews: [],\n    cachedViews: []\n  },\n  mutations: {\n    ADD_VISITED_VIEW: function ADD_VISITED_VIEW(state, view) {\n      if (state.visitedViews.some(function (v) {\n        return v.path === view.path;\n      })) return;\n      state.visitedViews.push(Object.assign({}, view, {\n        title: view.meta.title || 'no-name'\n      }));\n    },\n    ADD_CACHED_VIEW: function ADD_CACHED_VIEW(state, view) {\n      if (state.cachedViews.includes(view.name)) return;\n\n      if (!view.meta.noCache) {\n        state.cachedViews.push(view.name);\n      }\n    },\n    DEL_VISITED_VIEW: function DEL_VISITED_VIEW(state, view) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = state.visitedViews.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              i = _step$value[0],\n              v = _step$value[1];\n\n          if (v.path === view.path) {\n            state.visitedViews.splice(i, 1);\n            console.log('1');\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    DEL_CACHED_VIEW: function DEL_CACHED_VIEW(state, view) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = state.cachedViews[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var i = _step2.value;\n\n          if (i === view.name) {\n            var index = state.cachedViews.indexOf(i);\n            state.cachedViews.splice(index, 1);\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    DEL_OTHERS_VISITED_VIEWS: function DEL_OTHERS_VISITED_VIEWS(state, view) {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = state.visitedViews.entries()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              i = _step3$value[0],\n              v = _step3$value[1];\n\n          if (v.path === view.path) {\n            state.visitedViews = state.visitedViews.slice(i, i + 1);\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    },\n    DEL_OTHERS_CACHED_VIEWS: function DEL_OTHERS_CACHED_VIEWS(state, view) {\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = state.cachedViews[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var i = _step4.value;\n\n          if (i === view.name) {\n            var index = state.cachedViews.indexOf(i);\n            state.cachedViews = state.cachedViews.slice(index, index + 1);\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    },\n    DEL_ALL_VISITED_VIEWS: function DEL_ALL_VISITED_VIEWS(state) {\n      state.visitedViews = [];\n    },\n    DEL_ALL_CACHED_VIEWS: function DEL_ALL_CACHED_VIEWS(state) {\n      state.cachedViews = [];\n    }\n  },\n  actions: {\n    addView: function addView(_ref, view) {\n      var dispatch = _ref.dispatch;\n      dispatch('addVisitedView', view);\n      dispatch('addCachedView', view);\n    },\n    addVisitedView: function addVisitedView(_ref2, view) {\n      var commit = _ref2.commit;\n      commit('ADD_VISITED_VIEW', view);\n    },\n    addCachedView: function addCachedView(_ref3, view) {\n      var commit = _ref3.commit;\n      commit('ADD_CACHED_VIEW', view);\n    },\n    delView: function delView(_ref4, view) {\n      var dispatch = _ref4.dispatch,\n          state = _ref4.state;\n      return new Promise(function (resolve) {\n        dispatch('delVisitedView', view);\n        dispatch('delCachedView', view);\n        resolve({\n          visitedViews: _toConsumableArray(state.visitedViews),\n          cachedViews: _toConsumableArray(state.cachedViews)\n        });\n      });\n    },\n    delVisitedView: function delVisitedView(_ref5, view) {\n      var commit = _ref5.commit,\n          state = _ref5.state;\n      return new Promise(function (resolve) {\n        commit('DEL_VISITED_VIEW', view);\n        resolve(_toConsumableArray(state.visitedViews));\n      });\n    },\n    delCachedView: function delCachedView(_ref6, view) {\n      var commit = _ref6.commit,\n          state = _ref6.state;\n      return new Promise(function (resolve) {\n        commit('DEL_CACHED_VIEW', view);\n        resolve(_toConsumableArray(state.cachedViews));\n      });\n    },\n    delOthersViews: function delOthersViews(_ref7, view) {\n      var dispatch = _ref7.dispatch,\n          state = _ref7.state;\n      return new Promise(function (resolve) {\n        dispatch('delOthersVisitedViews', view);\n        dispatch('delOthersCachedViews', view);\n        resolve({\n          visitedViews: _toConsumableArray(state.visitedViews),\n          cachedViews: _toConsumableArray(state.cachedViews)\n        });\n      });\n    },\n    delOthersVisitedViews: function delOthersVisitedViews(_ref8, view) {\n      var commit = _ref8.commit,\n          state = _ref8.state;\n      return new Promise(function (resolve) {\n        commit('DEL_OTHERS_VISITED_VIEWS', view);\n        resolve(_toConsumableArray(state.visitedViews));\n      });\n    },\n    delOthersCachedViews: function delOthersCachedViews(_ref9, view) {\n      var commit = _ref9.commit,\n          state = _ref9.state;\n      return new Promise(function (resolve) {\n        commit('DEL_OTHERS_CACHED_VIEWS', view);\n        resolve(_toConsumableArray(state.cachedViews));\n      });\n    },\n    delAllViews: function delAllViews(_ref10, view) {\n      var dispatch = _ref10.dispatch,\n          state = _ref10.state;\n      return new Promise(function (resolve) {\n        dispatch('delAllVisitedViews', view);\n        dispatch('delAllCachedViews', view);\n        resolve({\n          visitedViews: _toConsumableArray(state.visitedViews),\n          cachedViews: _toConsumableArray(state.cachedViews)\n        });\n      });\n    },\n    delAllVisitedViews: function delAllVisitedViews(_ref11) {\n      var commit = _ref11.commit,\n          state = _ref11.state;\n      return new Promise(function (resolve) {\n        commit('DEL_ALL_VISITED_VIEWS');\n        resolve(_toConsumableArray(state.visitedViews));\n      });\n    },\n    delAllCachedViews: function delAllCachedViews(_ref12) {\n      var commit = _ref12.commit,\n          state = _ref12.state;\n      return new Promise(function (resolve) {\n        commit('DEL_ALL_CACHED_VIEWS');\n        resolve(_toConsumableArray(state.cachedViews));\n      });\n    }\n  }\n};\nexport default tagsView;",{"version":3,"sources":["E:\\Code\\VsCode\\测试代码\\login-demo\\src\\store\\modules\\tagsView.js"],"names":["tagsView","state","visitedViews","cachedViews","mutations","ADD_VISITED_VIEW","view","some","v","path","push","Object","assign","title","meta","ADD_CACHED_VIEW","includes","name","noCache","DEL_VISITED_VIEW","entries","i","splice","console","log","DEL_CACHED_VIEW","index","indexOf","DEL_OTHERS_VISITED_VIEWS","slice","DEL_OTHERS_CACHED_VIEWS","DEL_ALL_VISITED_VIEWS","DEL_ALL_CACHED_VIEWS","actions","addView","dispatch","addVisitedView","commit","addCachedView","delView","Promise","resolve","delVisitedView","delCachedView","delOthersViews","delOthersVisitedViews","delOthersCachedViews","delAllViews","delAllVisitedViews","delAllCachedViews"],"mappings":"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","sourcesContent":["const tagsView = {\r\n  state: {\r\n    visitedViews: [],\r\n    cachedViews: []\r\n  },\r\n  mutations: {\r\n    ADD_VISITED_VIEW: (state, view) => {\r\n      if (state.visitedViews.some(v => v.path === view.path)) return\r\n      state.visitedViews.push(\r\n        Object.assign({}, view, {\r\n          title: view.meta.title || 'no-name'\r\n        })\r\n      )\r\n    },\r\n    ADD_CACHED_VIEW: (state, view) => {\r\n      if (state.cachedViews.includes(view.name)) return\r\n      if (!view.meta.noCache) {\r\n        state.cachedViews.push(view.name)\r\n      }\r\n    },\r\n\r\n    DEL_VISITED_VIEW: (state, view) => {\r\n      for (const [i, v] of state.visitedViews.entries()) {\r\n        if (v.path === view.path) {\r\n          state.visitedViews.splice(i, 1)\r\n          console.log('1')\r\n          break\r\n        }\r\n      }\r\n    },\r\n    DEL_CACHED_VIEW: (state, view) => {\r\n      for (const i of state.cachedViews) {\r\n        if (i === view.name) {\r\n          const index = state.cachedViews.indexOf(i)\r\n          state.cachedViews.splice(index, 1)\r\n          break\r\n        }\r\n      }\r\n    },\r\n\r\n    DEL_OTHERS_VISITED_VIEWS: (state, view) => {\r\n      for (const [i, v] of state.visitedViews.entries()) {\r\n        if (v.path === view.path) {\r\n          state.visitedViews = state.visitedViews.slice(i, i + 1)\r\n          break\r\n        }\r\n      }\r\n    },\r\n    DEL_OTHERS_CACHED_VIEWS: (state, view) => {\r\n      for (const i of state.cachedViews) {\r\n        if (i === view.name) {\r\n          const index = state.cachedViews.indexOf(i)\r\n          state.cachedViews = state.cachedViews.slice(index, index + 1)\r\n          break\r\n        }\r\n      }\r\n    },\r\n\r\n    DEL_ALL_VISITED_VIEWS: state => {\r\n      state.visitedViews = []\r\n    },\r\n    DEL_ALL_CACHED_VIEWS: state => {\r\n      state.cachedViews = []\r\n    }\r\n\r\n  },\r\n  actions: {\r\n    addView({ dispatch }, view) {\r\n      dispatch('addVisitedView', view)\r\n      dispatch('addCachedView', view)\r\n    },\r\n    addVisitedView({ commit }, view) {\r\n      commit('ADD_VISITED_VIEW', view)\r\n    },\r\n    addCachedView({ commit }, view) {\r\n      commit('ADD_CACHED_VIEW', view)\r\n    },\r\n\r\n    delView({ dispatch, state }, view) {\r\n      return new Promise(resolve => {\r\n        dispatch('delVisitedView', view)\r\n        dispatch('delCachedView', view)\r\n        resolve({\r\n          visitedViews: [...state.visitedViews],\r\n          cachedViews: [...state.cachedViews]\r\n        })\r\n      })\r\n    },\r\n    delVisitedView({ commit, state }, view) {\r\n      return new Promise(resolve => {\r\n        commit('DEL_VISITED_VIEW', view)\r\n        resolve([...state.visitedViews])\r\n      })\r\n    },\r\n    delCachedView({ commit, state }, view) {\r\n      return new Promise(resolve => {\r\n        commit('DEL_CACHED_VIEW', view)\r\n        resolve([...state.cachedViews])\r\n      })\r\n    },\r\n\r\n    delOthersViews({ dispatch, state }, view) {\r\n      return new Promise(resolve => {\r\n        dispatch('delOthersVisitedViews', view)\r\n        dispatch('delOthersCachedViews', view)\r\n        resolve({\r\n          visitedViews: [...state.visitedViews],\r\n          cachedViews: [...state.cachedViews]\r\n        })\r\n      })\r\n    },\r\n    delOthersVisitedViews({ commit, state }, view) {\r\n      return new Promise(resolve => {\r\n        commit('DEL_OTHERS_VISITED_VIEWS', view)\r\n        resolve([...state.visitedViews])\r\n      })\r\n    },\r\n    delOthersCachedViews({ commit, state }, view) {\r\n      return new Promise(resolve => {\r\n        commit('DEL_OTHERS_CACHED_VIEWS', view)\r\n        resolve([...state.cachedViews])\r\n      })\r\n    },\r\n\r\n    delAllViews({ dispatch, state }, view) {\r\n      return new Promise(resolve => {\r\n        dispatch('delAllVisitedViews', view)\r\n        dispatch('delAllCachedViews', view)\r\n        resolve({\r\n          visitedViews: [...state.visitedViews],\r\n          cachedViews: [...state.cachedViews]\r\n        })\r\n      })\r\n    },\r\n    delAllVisitedViews({ commit, state }) {\r\n      return new Promise(resolve => {\r\n        commit('DEL_ALL_VISITED_VIEWS')\r\n        resolve([...state.visitedViews])\r\n      })\r\n    },\r\n    delAllCachedViews({ commit, state }) {\r\n      return new Promise(resolve => {\r\n        commit('DEL_ALL_CACHED_VIEWS')\r\n        resolve([...state.cachedViews])\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default tagsView\r\n"]}]}