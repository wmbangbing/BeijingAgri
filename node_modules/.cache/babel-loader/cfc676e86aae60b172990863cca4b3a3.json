{"remainingRequest":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\babel-loader\\lib\\index.js!E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Code\\VsCode\\测试代码\\login-demo\\src\\store\\modules\\user.js","dependencies":[{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\src\\store\\modules\\user.js","mtime":1536028147655},{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537168178297},{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport { loginByUsername, logout, getUserInfo } from '@/api/login';\nimport { getToken, setToken, removeToken } from '@/utils/auth';\nvar user = {\n  state: {\n    user: '',\n    status: '',\n    code: '',\n    token: getToken(),\n    name: '',\n    avatar: '',\n    introduction: '',\n    roles: [],\n    setting: {\n      articlePlatform: []\n    }\n  },\n  mutations: {\n    SET_CODE: function SET_CODE(state, code) {\n      state.code = code;\n    },\n    SET_TOKEN: function SET_TOKEN(state, token) {\n      state.token = token;\n    },\n    SET_INTRODUCTION: function SET_INTRODUCTION(state, introduction) {\n      state.introduction = introduction;\n    },\n    SET_SETTING: function SET_SETTING(state, setting) {\n      state.setting = setting;\n    },\n    SET_STATUS: function SET_STATUS(state, status) {\n      state.status = status;\n    },\n    SET_NAME: function SET_NAME(state, name) {\n      state.name = name;\n    },\n    SET_AVATAR: function SET_AVATAR(state, avatar) {\n      state.avatar = avatar;\n    },\n    SET_ROLES: function SET_ROLES(state, roles) {\n      state.roles = roles;\n    }\n  },\n  actions: {\n    // 用户名登录\n    LoginByUsername: function LoginByUsername(_ref, userInfo) {\n      var commit = _ref.commit;\n      var username = userInfo.username.trim();\n      return new Promise(function (resolve, reject) {\n        loginByUsername(username, userInfo.password).then(function (response) {\n          var data = response.data;\n          commit('SET_TOKEN', data.token);\n          setToken(response.data.token);\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 获取用户信息\n    GetUserInfo: function GetUserInfo(_ref2) {\n      var commit = _ref2.commit,\n          state = _ref2.state;\n      return new Promise(function (resolve, reject) {\n        getUserInfo(state.token).then(function (response) {\n          if (!response.data) {\n            // 由于mockjs 不支持自定义状态码只能这样hack\n            reject('error');\n          }\n\n          var data = response.data;\n\n          if (data.roles && data.roles.length > 0) {\n            // 验证返回的roles是否是一个非空数组\n            commit('SET_ROLES', data.roles);\n          } else {\n            reject('getInfo: roles must be a non-null array !');\n          }\n\n          commit('SET_NAME', data.name);\n          commit('SET_AVATAR', data.avatar);\n          commit('SET_INTRODUCTION', data.introduction);\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 第三方验证登录\n    // LoginByThirdparty({ commit, state }, code) {\n    //   return new Promise((resolve, reject) => {\n    //     commit('SET_CODE', code)\n    //     loginByThirdparty(state.status, state.email, state.code).then(response => {\n    //       commit('SET_TOKEN', response.data.token)\n    //       setToken(response.data.token)\n    //       resolve()\n    //     }).catch(error => {\n    //       reject(error)\n    //     })\n    //   })\n    // },\n    // 登出\n    LogOut: function LogOut(_ref3) {\n      var commit = _ref3.commit,\n          state = _ref3.state;\n      return new Promise(function (resolve, reject) {\n        logout(state.token).then(function () {\n          commit('SET_TOKEN', '');\n          commit('SET_ROLES', []);\n          removeToken();\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 前端 登出\n    FedLogOut: function FedLogOut(_ref4) {\n      var commit = _ref4.commit;\n      return new Promise(function (resolve) {\n        commit('SET_TOKEN', '');\n        removeToken();\n        resolve();\n      });\n    },\n    // 动态修改权限\n    ChangeRoles: function ChangeRoles(_ref5, role) {\n      var commit = _ref5.commit;\n      return new Promise(function (resolve) {\n        commit('SET_TOKEN', role);\n        setToken(role);\n        getUserInfo(role).then(function (response) {\n          var data = response.data;\n          commit('SET_ROLES', data.roles);\n          commit('SET_NAME', data.name);\n          commit('SET_AVATAR', data.avatar);\n          commit('SET_INTRODUCTION', data.introduction);\n          resolve();\n        });\n      });\n    }\n  }\n};\nexport default user;",{"version":3,"sources":["E:\\Code\\VsCode\\测试代码\\login-demo\\src\\store\\modules\\user.js"],"names":["loginByUsername","logout","getUserInfo","getToken","setToken","removeToken","user","state","status","code","token","name","avatar","introduction","roles","setting","articlePlatform","mutations","SET_CODE","SET_TOKEN","SET_INTRODUCTION","SET_SETTING","SET_STATUS","SET_NAME","SET_AVATAR","SET_ROLES","actions","LoginByUsername","userInfo","commit","username","trim","Promise","resolve","reject","password","then","data","response","catch","error","GetUserInfo","length","LogOut","FedLogOut","ChangeRoles","role"],"mappings":"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","sourcesContent":["import { loginByUsername, logout, getUserInfo } from '@/api/login'\r\nimport { getToken, setToken, removeToken } from '@/utils/auth'\r\n\r\nconst user = {\r\n  state: {\r\n    user: '',\r\n    status: '',\r\n    code: '',\r\n    token: getToken(),\r\n    name: '',\r\n    avatar: '',\r\n    introduction: '',\r\n    roles: [],\r\n    setting: {\r\n      articlePlatform: []\r\n    }\r\n  },\r\n\r\n  mutations: {\r\n    SET_CODE: (state, code) => {\r\n      state.code = code\r\n    },\r\n    SET_TOKEN: (state, token) => {\r\n      state.token = token\r\n    },\r\n    SET_INTRODUCTION: (state, introduction) => {\r\n      state.introduction = introduction\r\n    },\r\n    SET_SETTING: (state, setting) => {\r\n      state.setting = setting\r\n    },\r\n    SET_STATUS: (state, status) => {\r\n      state.status = status\r\n    },\r\n    SET_NAME: (state, name) => {\r\n      state.name = name\r\n    },\r\n    SET_AVATAR: (state, avatar) => {\r\n      state.avatar = avatar\r\n    },\r\n    SET_ROLES: (state, roles) => {\r\n      state.roles = roles\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    // 用户名登录\r\n    LoginByUsername({ commit }, userInfo) {\r\n      const username = userInfo.username.trim()\r\n      return new Promise((resolve, reject) => {\r\n        loginByUsername(username, userInfo.password).then(response => {\r\n          const data = response.data\r\n          commit('SET_TOKEN', data.token)\r\n          setToken(response.data.token)\r\n          resolve()\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 获取用户信息\r\n    GetUserInfo({ commit, state }) {\r\n      return new Promise((resolve, reject) => {\r\n        getUserInfo(state.token).then(response => {\r\n          if (!response.data) { // 由于mockjs 不支持自定义状态码只能这样hack\r\n            reject('error')\r\n          }\r\n          const data = response.data\r\n\r\n          if (data.roles && data.roles.length > 0) { // 验证返回的roles是否是一个非空数组\r\n            commit('SET_ROLES', data.roles)\r\n          } else {\r\n            reject('getInfo: roles must be a non-null array !')\r\n          }\r\n\r\n          commit('SET_NAME', data.name)\r\n          commit('SET_AVATAR', data.avatar)\r\n          commit('SET_INTRODUCTION', data.introduction)\r\n          resolve(response)\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 第三方验证登录\r\n    // LoginByThirdparty({ commit, state }, code) {\r\n    //   return new Promise((resolve, reject) => {\r\n    //     commit('SET_CODE', code)\r\n    //     loginByThirdparty(state.status, state.email, state.code).then(response => {\r\n    //       commit('SET_TOKEN', response.data.token)\r\n    //       setToken(response.data.token)\r\n    //       resolve()\r\n    //     }).catch(error => {\r\n    //       reject(error)\r\n    //     })\r\n    //   })\r\n    // },\r\n\r\n    // 登出\r\n    LogOut({ commit, state }) {\r\n      return new Promise((resolve, reject) => {\r\n        logout(state.token).then(() => {\r\n          commit('SET_TOKEN', '')\r\n          commit('SET_ROLES', [])\r\n          removeToken()\r\n          resolve()\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 前端 登出\r\n    FedLogOut({ commit }) {\r\n      return new Promise(resolve => {\r\n        commit('SET_TOKEN', '')\r\n        removeToken()\r\n        resolve()\r\n      })\r\n    },\r\n\r\n    // 动态修改权限\r\n    ChangeRoles({ commit }, role) {\r\n      return new Promise(resolve => {\r\n        commit('SET_TOKEN', role)\r\n        setToken(role)\r\n        getUserInfo(role).then(response => {\r\n          const data = response.data\r\n          commit('SET_ROLES', data.roles)\r\n          commit('SET_NAME', data.name)\r\n          commit('SET_AVATAR', data.avatar)\r\n          commit('SET_INTRODUCTION', data.introduction)\r\n          resolve()\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default user\r\n"]}]}