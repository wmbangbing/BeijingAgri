{"remainingRequest":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\thread-loader\\dist\\cjs.js!E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\babel-loader\\lib\\index.js!E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Code\\VsCode\\测试代码\\login-demo\\src\\store\\modules\\permission.js","dependencies":[{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\src\\store\\modules\\permission.js","mtime":1536028147654},{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537168178297},{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Code\\VsCode\\测试代码\\login-demo\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { asyncRouterMap, constantRouterMap } from '@/router';\n/**\r\n * 通过meta.role判断是否与当前用户权限匹配\r\n * @param roles\r\n * @param route\r\n */\n\nfunction hasPermission(roles, route) {\n  if (route.meta && route.meta.roles) {\n    return roles.some(function (role) {\n      return route.meta.roles.indexOf(role) >= 0;\n    });\n  } else {\n    return true;\n  }\n}\n/**\r\n * 递归过滤异步路由表，返回符合用户角色权限的路由表\r\n * @param asyncRouterMap\r\n * @param roles\r\n */\n\n\nfunction filterAsyncRouter(asyncRouterMap, roles) {\n  var accessedRouters = asyncRouterMap.filter(function (route) {\n    if (hasPermission(roles, route)) {\n      if (route.children && route.children.length) {\n        route.children = filterAsyncRouter(route.children, roles);\n      }\n\n      return true;\n    }\n\n    return false;\n  });\n  return accessedRouters;\n}\n\nvar permission = {\n  state: {\n    routers: constantRouterMap,\n    addRouters: []\n  },\n  mutations: {\n    SET_ROUTERS: function SET_ROUTERS(state, routers) {\n      state.addRouters = routers;\n      state.routers = constantRouterMap.concat(routers);\n    }\n  },\n  actions: {\n    GenerateRoutes: function GenerateRoutes(_ref, data) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve) {\n        var roles = data.roles;\n        var accessedRouters;\n\n        if (roles.indexOf('admin') >= 0) {\n          accessedRouters = asyncRouterMap;\n        } else {\n          accessedRouters = filterAsyncRouter(asyncRouterMap, roles);\n        }\n\n        commit('SET_ROUTERS', accessedRouters);\n        resolve();\n      });\n    }\n  }\n};\nexport default permission;",{"version":3,"sources":["E:\\Code\\VsCode\\测试代码\\login-demo\\src\\store\\modules\\permission.js"],"names":["asyncRouterMap","constantRouterMap","hasPermission","roles","route","meta","some","indexOf","role","filterAsyncRouter","accessedRouters","filter","children","length","permission","state","routers","addRouters","mutations","SET_ROUTERS","concat","actions","GenerateRoutes","data","commit","Promise","resolve"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,iBAAzB,QAAkD,UAAlD;AAEA;;;;;;AAKA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqC;AACnC,MAAIA,MAAMC,IAAN,IAAcD,MAAMC,IAAN,CAAWF,KAA7B,EAAoC;AAClC,WAAOA,MAAMG,IAAN,CAAW;AAAA,aAAQF,MAAMC,IAAN,CAAWF,KAAX,CAAiBI,OAAjB,CAAyBC,IAAzB,KAAkC,CAA1C;AAAA,KAAX,CAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF;AAED;;;;;;;AAKA,SAASC,iBAAT,CAA2BT,cAA3B,EAA2CG,KAA3C,EAAkD;AAChD,MAAMO,kBAAkBV,eAAeW,MAAf,CAAsB,iBAAS;AACrD,QAAIT,cAAcC,KAAd,EAAqBC,KAArB,CAAJ,EAAiC;AAC/B,UAAIA,MAAMQ,QAAN,IAAkBR,MAAMQ,QAAN,CAAeC,MAArC,EAA6C;AAC3CT,cAAMQ,QAAN,GAAiBH,kBAAkBL,MAAMQ,QAAxB,EAAkCT,KAAlC,CAAjB;AACD;;AACD,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GARuB,CAAxB;AASA,SAAOO,eAAP;AACD;;AAED,IAAMI,aAAa;AACjBC,SAAO;AACLC,aAASf,iBADJ;AAELgB,gBAAY;AAFP,GADU;AAKjBC,aAAW;AACTC,iBAAa,qBAACJ,KAAD,EAAQC,OAAR,EAAoB;AAC/BD,YAAME,UAAN,GAAmBD,OAAnB;AACAD,YAAMC,OAAN,GAAgBf,kBAAkBmB,MAAlB,CAAyBJ,OAAzB,CAAhB;AACD;AAJQ,GALM;AAWjBK,WAAS;AACPC,kBADO,gCACoBC,IADpB,EAC0B;AAAA,UAAhBC,MAAgB,QAAhBA,MAAgB;AAC/B,aAAO,IAAIC,OAAJ,CAAY,mBAAW;AAAA,YACpBtB,KADoB,GACVoB,IADU,CACpBpB,KADoB;AAE5B,YAAIO,eAAJ;;AACA,YAAIP,MAAMI,OAAN,CAAc,OAAd,KAA0B,CAA9B,EAAiC;AAC/BG,4BAAkBV,cAAlB;AACD,SAFD,MAEO;AACLU,4BAAkBD,kBAAkBT,cAAlB,EAAkCG,KAAlC,CAAlB;AACD;;AACDqB,eAAO,aAAP,EAAsBd,eAAtB;AACAgB;AACD,OAVM,CAAP;AAWD;AAbM;AAXQ,CAAnB;AA4BA,eAAeZ,UAAf","sourcesContent":["import { asyncRouterMap, constantRouterMap } from '@/router'\r\n\r\n/**\r\n * 通过meta.role判断是否与当前用户权限匹配\r\n * @param roles\r\n * @param route\r\n */\r\nfunction hasPermission(roles, route) {\r\n  if (route.meta && route.meta.roles) {\r\n    return roles.some(role => route.meta.roles.indexOf(role) >= 0)\r\n  } else {\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * 递归过滤异步路由表，返回符合用户角色权限的路由表\r\n * @param asyncRouterMap\r\n * @param roles\r\n */\r\nfunction filterAsyncRouter(asyncRouterMap, roles) {\r\n  const accessedRouters = asyncRouterMap.filter(route => {\r\n    if (hasPermission(roles, route)) {\r\n      if (route.children && route.children.length) {\r\n        route.children = filterAsyncRouter(route.children, roles)\r\n      }\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n  return accessedRouters\r\n}\r\n\r\nconst permission = {\r\n  state: {\r\n    routers: constantRouterMap,\r\n    addRouters: []\r\n  },\r\n  mutations: {\r\n    SET_ROUTERS: (state, routers) => {\r\n      state.addRouters = routers\r\n      state.routers = constantRouterMap.concat(routers)\r\n    }\r\n  },\r\n  actions: {\r\n    GenerateRoutes({ commit }, data) {\r\n      return new Promise(resolve => {\r\n        const { roles } = data\r\n        let accessedRouters\r\n        if (roles.indexOf('admin') >= 0) {\r\n          accessedRouters = asyncRouterMap\r\n        } else {\r\n          accessedRouters = filterAsyncRouter(asyncRouterMap, roles)\r\n        }\r\n        commit('SET_ROUTERS', accessedRouters)\r\n        resolve()\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default permission\r\n"]}]}