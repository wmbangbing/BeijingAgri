{"remainingRequest":"E:\\Code\\VsCode\\测试代码\\bjAgri\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Code\\VsCode\\测试代码\\bjAgri\\src\\views\\table\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Code\\VsCode\\测试代码\\bjAgri\\src\\views\\table\\index.vue","mtime":1538482482701},{"path":"E:\\Code\\VsCode\\测试代码\\bjAgri\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537168178297},{"path":"E:\\Code\\VsCode\\测试代码\\bjAgri\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Code\\VsCode\\测试代码\\bjAgri\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537168178297},{"path":"E:\\Code\\VsCode\\测试代码\\bjAgri\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getList } from '@/api/table'\r\n\r\nexport default {\r\n  filters: {\r\n    statusFilter(status) {\r\n      const statusMap = {\r\n        published: 'success',\r\n        draft: 'gray',\r\n        deleted: 'danger'\r\n      }\r\n      return statusMap[status]\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      listLoading: true\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      this.listLoading = true\r\n      getList(this.listQuery).then(response => {\r\n        this.list = response.data.items\r\n        this.listLoading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src\\views\\table","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-table\r\n      v-loading=\"listLoading\"\r\n      :data=\"list\"\r\n      element-loading-text=\"Loading\"\r\n      border\r\n      fit\r\n      highlight-current-row>\r\n      <el-table-column align=\"center\" label=\"ID\" width=\"95\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.$index }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"Title\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.title }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"Author\" width=\"110\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ scope.row.author }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"Pageviews\" width=\"110\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.pageviews }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column class-name=\"status-col\" label=\"Status\" width=\"110\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag :type=\"scope.row.status | statusFilter\">{{ scope.row.status }}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" prop=\"created_at\" label=\"Display_time\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <i class=\"el-icon-time\"/>\r\n          <span>{{ scope.row.display_time }}</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getList } from '@/api/table'\r\n\r\nexport default {\r\n  filters: {\r\n    statusFilter(status) {\r\n      const statusMap = {\r\n        published: 'success',\r\n        draft: 'gray',\r\n        deleted: 'danger'\r\n      }\r\n      return statusMap[status]\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      listLoading: true\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      this.listLoading = true\r\n      getList(this.listQuery).then(response => {\r\n        this.list = response.data.items\r\n        this.listLoading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}